package com.hackerrank.api.controller;

import com.hackerrank.api.model.Vulnerability;
import com.hackerrank.api.service.VulnerabilityService;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import java.util.List;

@RestController
@RequestMapping("/vulnerability")
public class VulnerabilityController {
  private final VulnerabilityService vulnerabilityService;

  
  public VulnerabilityController(VulnerabilityService vulnerabilityService) {
    this.vulnerabilityService = vulnerabilityService;
  }
  

  @GetMapping
  @ResponseStatus(HttpStatus.OK)
  public List<Vulnerability> getAllVulnerability() {
    return vulnerabilityService.getAllVulnerability();
  }
  @GetMapping("/vulnerability/{id}")
  @ResponseStatus(HttpStatus.OK)
  public Vulnerability getVulnerabilityById(@PathVariable("id") Long id) {
    return  vulnerabilityService.getVulnerabilityById(id);
  }
  
 

  @PostMapping
  @ResponseStatus(HttpStatus.CREATED)
  public Vulnerability createVulnerability(@RequestBody Vulnerability vulnerability) {
    return vulnerabilityService.createNewVulnerability(vulnerability);
  }
  
  @DeleteMapping("/vulnerability/{id}")
  @ResponseStatus(HttpStatus.OK)
  public void deleteById(@PathVariable("id") Long id) {
	  vulnerabilityService.deleteById(id);
  }
}
